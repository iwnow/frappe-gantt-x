{"version":3,"file":"frappe-gantt.es.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nconst month_names = {\r\n    en: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n    ],\r\n    es: [\r\n        'Enero',\r\n        'Febrero',\r\n        'Marzo',\r\n        'Abril',\r\n        'Mayo',\r\n        'Junio',\r\n        'Julio',\r\n        'Agosto',\r\n        'Septiembre',\r\n        'Octubre',\r\n        'Noviembre',\r\n        'Diciembre',\r\n    ],\r\n    it: [\r\n        'Gennaio',\r\n        'Febbraio',\r\n        'Marzo',\r\n        'Aprile',\r\n        'Maggio',\r\n        'Giugno',\r\n        'Luglio',\r\n        'Agosto',\r\n        'Settembre',\r\n        'Ottobre',\r\n        'Novembre',\r\n        'Dicembre',\r\n    ],\r\n    ru: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n    ],\r\n    ptBr: [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro',\r\n    ],\r\n    fr: [\r\n        'Janvier',\r\n        'Février',\r\n        'Mars',\r\n        'Avril',\r\n        'Mai',\r\n        'Juin',\r\n        'Juillet',\r\n        'Août',\r\n        'Septembre',\r\n        'Octobre',\r\n        'Novembre',\r\n        'Décembre',\r\n    ],\r\n    tr: [\r\n        'Ocak',\r\n        'Şubat',\r\n        'Mart',\r\n        'Nisan',\r\n        'Mayıs',\r\n        'Haziran',\r\n        'Temmuz',\r\n        'Ağustos',\r\n        'Eylül',\r\n        'Ekim',\r\n        'Kasım',\r\n        'Aralık',\r\n    ],\r\n    zh: [\r\n        '一月',\r\n        '二月',\r\n        '三月',\r\n        '四月',\r\n        '五月',\r\n        '六月',\r\n        '七月',\r\n        '八月',\r\n        '九月',\r\n        '十月',\r\n        '十一月',\r\n        '十二月',\r\n    ],\r\n    de: [\r\n        'Januar',\r\n        'Februar',\r\n        'März',\r\n        'April',\r\n        'Mai',\r\n        'Juni',\r\n        'Juli',\r\n        'August',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Dezember',\r\n    ],\r\n    hu: [\r\n        'Január',\r\n        'Február',\r\n        'Március',\r\n        'Április',\r\n        'Május',\r\n        'Június',\r\n        'Július',\r\n        'Augusztus',\r\n        'Szeptember',\r\n        'Október',\r\n        'November',\r\n        'December',\r\n    ],\r\n};\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_names[lang][+values[1]],\r\n            MMM: month_names[lang][+values[1]],\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.hasBaseplan = !!this.task._bp_start && !!this.task._bp_end;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n            this.duration *\r\n            (this.task.progress / 100) || 0;\r\n\r\n        if (this.hasBaseplan) {\r\n            this.bpDuration =\r\n                date_utils.diff(this.task._bp_end, this.task._bp_start, 'hour') /\r\n                this.gantt.options.step;\r\n            this.bpWidth = this.gantt.options.column_width * this.bpDuration;\r\n            this.bpX = this.compute_x(this.task._bp_start);\r\n        }\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        if (typeof this.gantt.options.hooks?.beforeDrawBar === 'function') {\r\n            this.gantt.options.hooks.beforeDrawBar(this);\r\n        }\r\n\r\n        this.draw_baseplan();\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n\r\n        if (typeof this.gantt.options.hooks?.afterDrawBar === 'function') {\r\n            this.gantt.options.hooks.afterDrawBar(this);\r\n        }\r\n    }\r\n\r\n    draw_baseplan() {\r\n        if (!this.hasBaseplan) {\r\n            return;\r\n        }\r\n\r\n        let bpAttr = {\r\n            x: this.bpX,\r\n            y: this.y - 4,\r\n            width: this.bpWidth,\r\n            height: this.height + 8,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            'stroke-dasharray': 4,\r\n            class: `bar bar-baseplan ${this.task.baseplan.custom_class || ''}`,\r\n        }\r\n\r\n        if (typeof this.gantt.options.hooks?.svgBaseplan === 'function') {\r\n            const custAttr = this.gantt.options.hooks.svgBaseplan(this.task, bpAttr);\r\n            Object.assign(bpAttr, custAttr || {});\r\n        }\r\n\r\n        bpAttr.append_to = this.bar_group;\r\n\r\n        this.$baseplan = createSVG('rect', bpAttr);\r\n\r\n        animateSVG(this.$baseplan, 'width', 0, this.bpWidth);\r\n    }\r\n\r\n    draw_bar() {\r\n        let barAttr = {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        };\r\n\r\n        if (typeof this.gantt.options.hooks?.svgBar === 'function') {\r\n            const custAttr = this.gantt.options.hooks.svgBar(this.task, barAttr);\r\n            Object.assign(barAttr, custAttr || {});\r\n        }\r\n\r\n        barAttr.append_to = this.bar_group;\r\n\r\n        this.$bar = createSVG('rect', barAttr);\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        let subtitle = start_date + ' - ' + end_date;\r\n        if (this.hasBaseplan) {\r\n            const bp_start_date = date_utils.format(\r\n                this.task._bp_start,\r\n                'MMM D',\r\n                this.gantt.options.language\r\n            );\r\n            const bp_end_date = date_utils.format(\r\n                date_utils.add(this.task._bp_end, -1, 'second'),\r\n                'MMM D',\r\n                this.gantt.options.language\r\n            );\r\n            subtitle += ` (${bp_start_date} - ${bp_end_date}) `;\r\n        }\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x(start) {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = start || this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\n\r\nimport './gantt.scss';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n        this.baseplan_visible(this.options.baseplan);\r\n        //for toggles\r\n        // mousedown event to capture gantt_chart property \"bar_being_dragged\"\r\n        // this.$svg.addEventListener('mousedown', this.handleMouseDown.bind(this), false);\r\n        this.setup_toggle();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n            baseplan: true,\r\n            hooks: {\r\n                svgGridRow: attr => attr,\r\n                svgBar: attr => attr,\r\n                svgBaseplan: attr => attr,\r\n                beforeDrawBar: () => { },\r\n                afterDrawBar: () => { },\r\n            }\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            if (task.baseplan?.start && task.baseplan?.end) {\r\n                task._bp_start = date_utils.parse(task.baseplan.start);\r\n                task._bp_end = date_utils.parse(task.baseplan.end);\r\n            }\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    forceRefresh(tasks) {\r\n        this.refresh(tasks);\r\n        this.setup_toggle();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n        this.renderCurrentTimeLabel();\r\n    }\r\n\r\n    renderCurrentTimeLabel() {\r\n        const now = new Date();\r\n        if (now < this.dates[0] || this.dates[this.dates.length - 1] < now) {\r\n            return;\r\n        }\r\n        const difftime = this.dates[1].getTime() - this.dates[0].getTime();\r\n        const minutes = (this.dates[this.dates.length - 1].getTime() - this.dates[0].getTime() + difftime) / 60_000;\r\n        const width = +this.$svg.attributes.width.value;\r\n        const pxpm = minutes / width;\r\n        const x = (now.getTime() - this.dates[0].getTime()) / (60_000 * pxpm);\r\n        const lastGridRow = this.$svg.querySelector('.grid .grid-row:last-child');\r\n        const y2 = +lastGridRow.attributes.y.value + +lastGridRow.attributes.height.value;\r\n        createSVG('line', {\r\n            x1: x,\r\n            x2: x,\r\n            y1: 60,\r\n            y2: y2,\r\n            stroke: \"red\",\r\n            class: 'now-label',\r\n            append_to: this.$svg,\r\n        });\r\n        const g = createSVG('g', { append_to: this.$svg });\r\n        const label = createSVG('rect', {\r\n            x: x,\r\n            y: 40,\r\n            width: this.options?.todayLabel?.width || 55,\r\n            height: 20,\r\n            class: 'now-label',\r\n            fill: 'red',\r\n            append_to: g,\r\n        });\r\n        const text = createSVG('text', {\r\n            x: x + 4,\r\n            y: 54,\r\n            height: 20,\r\n            class: 'now-label-text',\r\n            fill: 'white',\r\n            append_to: g,\r\n        });\r\n        text.textContent = this.options?.todayLabel?.text || 'Сегодня';\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height + this.options.padding + 100,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            let rectAttr = {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            };\r\n            if (typeof this.options.hooks?.svgGridRow === 'function') {\r\n                const custAttr = this.options.hooks.svgGridRow(task, rectAttr);\r\n                Object.assign(rectAttr, custAttr || {});\r\n            }\r\n            createSVG('rect', rectAttr);\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                            date,\r\n                            'D MMM',\r\n                            this.options.language\r\n                        )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index] // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n            this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper:not(.readonly), .bar-wrapper:not(.readonly) .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            const dy = e.offsetY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper:not(.readonly) .handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        args = Array.isArray(args) ? args : [args];\r\n        args.push(this);\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n\r\n    baseplan_visible(visible = true) {\r\n        if (visible) {\r\n            this.$svg?.classList.add('baseplan-visible');\r\n        } else {\r\n            this.$svg?.classList.remove('baseplan-visible');\r\n        }\r\n    }\r\n\r\n    setup_toggle() {\r\n        // https://codepen.io/jean2607/pen/YzYyVzE\r\n\r\n        this.tasks.forEach((task) => {\r\n            task.children = this.get_all_dependent_tasks(task.id);\r\n            task.display = '';\r\n            task.parent = '';\r\n            task.collapsed = '';\r\n        });\r\n        let tasks_all = {};\r\n        this.tasks.forEach((item) => {\r\n            tasks_all[item.id] = item;\r\n        });\r\n        this.tasks_all = tasks_all;\r\n        this.parents = [];\r\n        this.tasks_to_display = this.tasks;\r\n    }\r\n\r\n    toggleBars(task) {\r\n        let children = task.children;\r\n\r\n        let index = this.parents.indexOf(task.id);\r\n        index === -1\r\n            ? this.parents.push(task.id)\r\n            : this.parents.splice(index, 1);\r\n\r\n        this.tasks_to_display.map((item) => {\r\n            let indexChild = children.indexOf(item.id);\r\n            if (indexChild !== -1) {\r\n                if (!item.display && !item.parent) {\r\n                    item.display = 'none';\r\n                    item.parent = task.id;\r\n                } else if (!item.display && item.parent) {\r\n                    item.display = item.display;\r\n                    item.parent = item.parent;\r\n                } else if (item.display && item.parent !== task.id) {\r\n                    item.display = item.display;\r\n                    item.parent = item.parent;\r\n                } else {\r\n                    item.display = '';\r\n                    item.parent = '';\r\n                }\r\n            } else if (item.id === task.id) {\r\n                item.collapsed = !item.collapsed ? true : '';\r\n            } else if (item.id !== task.id) {\r\n                item.collapsed = item.collapsed;\r\n            }\r\n\r\n            this.tasks_all[item.id] = item;\r\n\r\n            return item;\r\n        });\r\n\r\n        this.refresh(\r\n            this.tasks_to_display.filter((task) => !task.display)\r\n        );\r\n\r\n        let check =\r\n            this.tasks_to_display.length !==\r\n            this.tasks.length;\r\n        this.parents = !check ? [] : this.parents;\r\n\r\n        this.toggleClassBars(check);\r\n    }\r\n\r\n    // add or remove class to element bar\r\n    toggleClassBars(check) {\r\n        this.$svg\r\n            .querySelectorAll('.bar-wrapper')\r\n            .forEach((el) =>\r\n                this.parents.indexOf(el.dataset.id) !== -1 &&\r\n                check\r\n                    ? el.classList.add('parent')\r\n                    : el.classList.remove('parent')\r\n            );\r\n    }\r\n\r\n    collapseAll() {\r\n        let tasks = this.tasks_to_display\r\n            ? this.tasks_to_display\r\n            : this.tasks;\r\n        tasks.map((task) => {\r\n            if (!task.collapsed) {\r\n                toggleBars(task);\r\n            }\r\n        });\r\n    }\r\n\r\n    expandBars(task) {\r\n        let tasks = this.tasks_to_display\r\n            ? this.tasks_to_display\r\n            : this.tasks;\r\n        let tasks_to_display;\r\n\r\n        if (!task) {\r\n            tasks_to_display = tasks.map((item) => {\r\n                item.display = '';\r\n                item.parent = '';\r\n                item.collapsed = '';\r\n                this.tasks_all[item.id] = item;\r\n                return item;\r\n            });\r\n            this.parents = [];\r\n        } else {\r\n            let index = this.parents.indexOf(task.id);\r\n            if (task.collapsed && index !== -1)\r\n                this.parents.splice(index, 1);\r\n\r\n            tasks_to_display = tasks.map((item) => {\r\n                if (task.children.indexOf(item.id) !== -1) {\r\n                    index = this.parents.indexOf(item.id);\r\n                    if (index !== -1)\r\n                        this.parents.splice(index, 1);\r\n\r\n                    item.display = '';\r\n                    item.parent = '';\r\n                    item.collapsed = '';\r\n                } else if (task.id === item.id) {\r\n                    item.display = '';\r\n                    item.parent = '';\r\n                    item.collapsed = '';\r\n                } else {\r\n                    item.display = item.display;\r\n                    item.parent = item.parent;\r\n                    item.collapsed = item.collapsed;\r\n                }\r\n\r\n                this.tasks_all[item.id] = item;\r\n\r\n                return item;\r\n            });\r\n        }\r\n\r\n        this.tasks_to_display = tasks_to_display;\r\n        let check =\r\n            this.tasks_to_display.length !==\r\n            this.tasks.length;\r\n        this.refresh(\r\n            tasks_to_display.filter((task) => !task.display)\r\n        );\r\n\r\n        this.toggleClassBars(check);\r\n    }\r\n\r\n    handleMouseDown(event) {\r\n        if (!event.target.parentNode.classList.contains('bar-group'))\r\n            return;\r\n\r\n        let taskId = this.bar_being_dragged;\r\n        let task = this.get_task(taskId);\r\n\r\n        if (task?.children) {\r\n            let children = task.children\r\n                .map((item) => this.tasks_all[item])\r\n                .filter((item) => item.collapsed);\r\n\r\n            if (task.collapsed) {\r\n                this.expandBars(task);\r\n            } else if (!task.collapsed && children.length >= 1) {\r\n                children.forEach((item) => this.expandBars(item));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["month_names","en","es","it","ru","ptBr","fr","tr","zh","de","hu","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","year","month","day","hour","minute","second","millisecond","should_reset","_scale","clone","get_days_in_month","no_of_days","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","hasBaseplan","_bp_start","_bp_end","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","bpDuration","bpWidth","bpX","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","hooks","beforeDrawBar","draw_baseplan","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","afterDrawBar","bpAttr","rx","ry","baseplan","svgBaseplan","custAttr","assign","$baseplan","barAttr","svgBar","$bar","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","start","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","DAY","WEEK","MONTH","YEAR","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","baseplan_visible","setup_toggle","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","svgGridRow","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","forceRefresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","renderCurrentTimeLabel","difftime","getTime","pxpm","attributes","lastGridRow","x1","x2","y1","y2","stroke","g","todayLabel","fill","textContent","text","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","rectAttr","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date","visible","children","display","collapsed","tasks_all","item","parents","tasks_to_display","toggleBars","index","indexOf","splice","check","toggleClassBars","dataset","collapseAll","expandBars","handleMouseDown","taskId"],"mappings":"AAAA,MAQMA,EAAc,CAChBC,GAAI,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,GAAI,CACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,OAEJC,GAAI,CACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,YACA,aACA,UACA,WACA,aAIR,IAAeC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKO,MAAM,KAEzBH,EAAaE,EAAM,GACdC,MAAMN,GACNO,KAAKC,GAAQC,SAASD,EAAK,MAChCJ,EAAaC,EAAM,IAAMA,EAAM,GAAGC,MAAML,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIO,EAAOP,EAUX,OARIC,GAAcA,EAAWO,SACA,GAArBP,EAAWO,SACXP,EAAW,GAAK,KAAOA,EAAW,GAClCA,EAAW,GAAiC,IAA5BQ,WAAWR,EAAW,KAE1CM,EAAOA,EAAKG,OAAOT,IAGhB,IAAIF,QAAQQ,KAI3BI,UAAUf,EAAMgB,GAAY,G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"}